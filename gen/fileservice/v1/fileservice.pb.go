// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: fileservice/v1/fileservice.proto

package fileservicev1

import (
	_ "go.buf.build/grpc/go/satjinder/schemas/gproto/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetJsonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *GetJsonRequest) Reset() {
	*x = GetJsonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileservice_v1_fileservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJsonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJsonRequest) ProtoMessage() {}

func (x *GetJsonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileservice_v1_fileservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJsonRequest.ProtoReflect.Descriptor instead.
func (*GetJsonRequest) Descriptor() ([]byte, []int) {
	return file_fileservice_v1_fileservice_proto_rawDescGZIP(), []int{0}
}

func (x *GetJsonRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type GetJsonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Stats `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetJsonResponse) Reset() {
	*x = GetJsonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileservice_v1_fileservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJsonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJsonResponse) ProtoMessage() {}

func (x *GetJsonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileservice_v1_fileservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJsonResponse.ProtoReflect.Descriptor instead.
func (*GetJsonResponse) Descriptor() ([]byte, []int) {
	return file_fileservice_v1_fileservice_proto_rawDescGZIP(), []int{1}
}

func (x *GetJsonResponse) GetData() []*Stats {
	if x != nil {
		return x.Data
	}
	return nil
}

type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year string `protobuf:"bytes,1,opt,name=Year,proto3" json:"Year,omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileservice_v1_fileservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_fileservice_v1_fileservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_fileservice_v1_fileservice_proto_rawDescGZIP(), []int{2}
}

func (x *Stats) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

var File_fileservice_v1_fileservice_proto protoreflect.FileDescriptor

var file_fileservice_v1_fileservice_proto_rawDesc = []byte{
	0x0a, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x24, 0x6d, 0x65, 0x64, 0x38, 0x72, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x73, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x65, 0x64, 0x38, 0x72, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x73, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x1b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x59, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x59, 0x65, 0x61,
	0x72, 0x32, 0xdf, 0x02, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x12, 0xa2, 0x01,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x6d, 0x65, 0x64, 0x38,
	0x72, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x6d, 0x65, 0x64, 0x38, 0x72, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0xa2, 0x82, 0x19, 0x26, 0x1a, 0x24, 0x0a, 0x0c,
	0x66, 0x69, 0x6c, 0x65, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0xae, 0x01, 0x0a, 0x12, 0x55, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x34, 0x2e, 0x6d, 0x65, 0x64, 0x38,
	0x72, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x6d, 0x65, 0x64, 0x38, 0x72, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0xa2, 0x82, 0x19, 0x27, 0x1a, 0x25, 0x0a, 0x0b,
	0x75, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x09, 0x73,
	0x6f, 0x6d, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x09, 0x73, 0x6f, 0x6d, 0x65, 0x74, 0x68,
	0x69, 0x6e, 0x67, 0x42, 0xb6, 0x02, 0x0a, 0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x64, 0x38,
	0x72, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x42, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x43, 0x67, 0x6f, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x61, 0x74, 0x6a, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x04, 0x4d, 0x53, 0x53, 0x46,
	0xaa, 0x02, 0x24, 0x4d, 0x65, 0x64, 0x38, 0x72, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73,
	0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x24, 0x4d, 0x65, 0x64, 0x38, 0x72, 0x5c,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x5c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5c,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x30, 0x4d, 0x65, 0x64, 0x38, 0x72, 0x5c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x5c, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5c, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x28, 0x4d, 0x65, 0x64, 0x38, 0x72, 0x3a, 0x3a, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x73, 0x3a, 0x3a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x3a, 0x3a, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fileservice_v1_fileservice_proto_rawDescOnce sync.Once
	file_fileservice_v1_fileservice_proto_rawDescData = file_fileservice_v1_fileservice_proto_rawDesc
)

func file_fileservice_v1_fileservice_proto_rawDescGZIP() []byte {
	file_fileservice_v1_fileservice_proto_rawDescOnce.Do(func() {
		file_fileservice_v1_fileservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_fileservice_v1_fileservice_proto_rawDescData)
	})
	return file_fileservice_v1_fileservice_proto_rawDescData
}

var file_fileservice_v1_fileservice_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_fileservice_v1_fileservice_proto_goTypes = []interface{}{
	(*GetJsonRequest)(nil),  // 0: med8r.schemas.samples.fileservice.v1.GetJsonRequest
	(*GetJsonResponse)(nil), // 1: med8r.schemas.samples.fileservice.v1.GetJsonResponse
	(*Stats)(nil),           // 2: med8r.schemas.samples.fileservice.v1.stats
}
var file_fileservice_v1_fileservice_proto_depIdxs = []int32{
	2, // 0: med8r.schemas.samples.fileservice.v1.GetJsonResponse.data:type_name -> med8r.schemas.samples.fileservice.v1.stats
	0, // 1: med8r.schemas.samples.fileservice.v1.FileAPI.GetJson:input_type -> med8r.schemas.samples.fileservice.v1.GetJsonRequest
	0, // 2: med8r.schemas.samples.fileservice.v1.FileAPI.UnsupportedHandler:input_type -> med8r.schemas.samples.fileservice.v1.GetJsonRequest
	1, // 3: med8r.schemas.samples.fileservice.v1.FileAPI.GetJson:output_type -> med8r.schemas.samples.fileservice.v1.GetJsonResponse
	1, // 4: med8r.schemas.samples.fileservice.v1.FileAPI.UnsupportedHandler:output_type -> med8r.schemas.samples.fileservice.v1.GetJsonResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_fileservice_v1_fileservice_proto_init() }
func file_fileservice_v1_fileservice_proto_init() {
	if File_fileservice_v1_fileservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fileservice_v1_fileservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJsonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileservice_v1_fileservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJsonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileservice_v1_fileservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fileservice_v1_fileservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fileservice_v1_fileservice_proto_goTypes,
		DependencyIndexes: file_fileservice_v1_fileservice_proto_depIdxs,
		MessageInfos:      file_fileservice_v1_fileservice_proto_msgTypes,
	}.Build()
	File_fileservice_v1_fileservice_proto = out.File
	file_fileservice_v1_fileservice_proto_rawDesc = nil
	file_fileservice_v1_fileservice_proto_goTypes = nil
	file_fileservice_v1_fileservice_proto_depIdxs = nil
}
