syntax = "proto3";
package med8r.schemas.samples.usstats.v2;

import "google/protobuf/descriptor.proto";
import "gproto/v1/gproto.proto";
import "google/protobuf/any.proto";


service StatsAPI {
  rpc GetStatsData(GetStatsRequest) returns (GetStatsResponse) {
    option (med8r.schemas.gproto.v1.endpoint_config) = {
        entitlement_operations: ["appointments:read"],
        handlers: [
          {name:"entitlements",  options: [{key:"1", value:"appointments:read"}]},
          {name:"http-backend",  options: [
             {key:"auth_type",value:"JWT"},
               {key:"http_method",value:"GET"},
               {key:"url_pattern",value:"api/data?drilldowns={drilldowns}&measures={measures}"},
               {key:"host_config_key",value:"US-STATS"},
               {key:"body",value:"US-STATS"}
          ]}
        ],
    };
  }
}


message GetStatsRequest {
  string drilldowns = 1;
  string measures = 2;
}

message GetStatsResponse {
  repeated Data data = 1;
  repeated Source source = 2;
}

message Data {
    string ID_nation = 1 [json_name="ID Nation"];
    string nation = 2 [json_name="Nation"];
    uint32 ID_year = 3  [json_name="ID Year"];
    string year = 4 [json_name="Year"];;
    uint32 population = 5 [json_name="Population"];;
    string Slug_nation = 6  [json_name="Slug Nation"];
}

message Annotations {
    string source_name = 1;
    string source_description = 2;
    string dataset_name = 3;
    string dataset_link = 4;
    string table_id = 5;
    string topic = 6;
    string subtopic = 7;
}

message Source {
    repeated string measures = 1;
    Annotations annotations = 2;
    string name = 3;
    repeated google.protobuf.Any substitutions = 4;
}